import aiogram
from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from app.keyboards import start_kb, admin_kb
from database.database import registration, show_catalog, add_item, if_admin
from config import CHAT_ID

router = Router()

@router.message(CommandStart())
async def start(message: Message):
    registration(message.from_user.id, message.from_user.first_name, message.from_user.username)
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å "
                         f"–≤–∞–ª—é—Ç—É –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–≥—Ä–∞—Ö ;)\n"
                         f"–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ üëáüëáüëá", reply_markup=start_kb)

@router.message(F.text == "–ö–∞—Ç–∞–ª–æ–≥ üõí")
async def catalog(message: Message):
    # work with DB
    await message.answer(show_catalog())

@router.message(F.text == "–ö–æ—Ä–∑–∏–Ω–∞ üé∞")
async def cart(message: Message):
    # work with DB
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ—Ä–∑–∏–Ω–∞\n(–ö–∞–∫ —Ç–æ–ª—å–∫–æ —è –¥–æ–¥–µ–ª–∞—è –ë–î—à–∫–∏)")

@router.message(F.text == "–û –Ω–∞—Å üìû")
async def aboutUs(message: Message):
    await message.answer("–¶–∏—Ñ—Ä–æ–≤–∞—è –ü–µ—â–µ—Ä–∞ ‚Äî —ç—Ç–æ –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –≤–∞–ª—é—Ç—ã "
                         "–¥–ª—è –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–≥—Ä!\n–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –±—ã—Å—Ç—Ä—ã–π"
                         " –∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å –±–µ–∑ "
                         "–ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç –∏ –¥–æ–ª–≥–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π.\n–í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ: \n"
                         "- –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –≤–∞–ª—é—Ç—ã: –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–≥—Ä–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã, –∑–æ–ª–æ—Ç–æ, –∏ –¥—Ä—É–≥–∏–µ —Ä–µ—Å—É—Ä—Å—ã"
                         " –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–≥—Ä.\n"
                         "- –ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ"
                         " —Å—Ä–æ–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞—à–µ–π –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å–ª—É–∂–±–µ –¥–æ—Å—Ç–∞–≤–∫–∏.\n"
                         "- –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö"
                         " –∑–∞—â–∏—â–µ–Ω–∞ –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–∞.\n- –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã: –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º "
                         "—Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ –∫—É—Ä—Å—ã –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∏–≥—Ä–æ–π "
                         "–Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â—å –±–µ–∑ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç.\n–ó–∞–π–¥–∏—Ç–µ –∫ –Ω–∞–º —Å–µ–≥–æ–¥–Ω—è"
                         " –∏ –∏—Å–ø—ã—Ç–∞–π—Ç–µ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã —Å –¶–∏—Ñ—Ä–æ–≤–∞—è –ü–µ—â–µ—Ä–∞!")


@router.message(Command("admin"))
async def admin(message: Message):
    if if_admin(message.from_user.id)[0][0] == 1:
        await message.answer('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=admin_kb)
    else:
        await message.answer("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
